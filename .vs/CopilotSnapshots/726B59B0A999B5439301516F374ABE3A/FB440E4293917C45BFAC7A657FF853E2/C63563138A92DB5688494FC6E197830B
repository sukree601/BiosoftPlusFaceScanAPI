using BiosoftPlusFaceScanAPI.Models;
using BiosoftPlusFaceScanAPI.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.FileProviders;
using System.Text;

var builder = WebApplication.CreateBuilder(args);

// เพิ่มระบบ password startup
if (!ValidateStartupPassword())
{
    Console.WriteLine("การเข้าใช้งานถูกยกเลิก");
    Environment.Exit(1);
}

// Add services to the container.
builder.Services.AddSingleton<DeviceMonitor>();
// เปิดการทำงานของ MonitorPrinter เพื่อแสดง device monitoring table
builder.Services.AddHostedService<MonitorPrinter>();
builder.Services.AddControllers();
builder.Services.AddScoped<IAttendanceService, AttendanceService>();

// ตั้งค่า Logging - ปิด Entity Framework logs
builder.Logging.ClearProviders();
builder.Logging.AddConsole();
builder.Logging.SetMinimumLevel(LogLevel.Warning);
// ปิด EF Core database command logs โดยเฉพาะ
builder.Logging.AddFilter("Microsoft.EntityFrameworkCore.Database.Command", LogLevel.None);
builder.Logging.AddFilter("Microsoft.EntityFrameworkCore", LogLevel.None);

// ลงทะเบียน DbContext
builder.Services.AddDbContext<AppDb>(options =>
    options.UseSqlServer(builder.Configuration.GetConnectionString("Default")));

// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

builder.WebHost.UseUrls("http://0.0.0.0:7005");

var app = builder.Build();
app.UseDefaultFiles();
app.UseStaticFiles(new StaticFileOptions()
{
    FileProvider = new PhysicalFileProvider(
        Path.Combine(Directory.GetCurrentDirectory(), @"wwwroot"))
});
//// Configure the HTTP request pipeline.
//if (app.Environment.IsDevelopment())
//{
//    app.UseSwagger();
//    app.UseSwaggerUI();
//}

//app.UseHttpsRedirection();

app.UseAuthorization();

app.MapControllers();

Console.WriteLine("🚀 ระบบเริ่มทำงานแล้ว - Biosoft Plus Face Scan API พร้อมใช้งาน!");
app.Run();

// ฟังก์ชันสำหรับตรวจสอบ password
static bool ValidateStartupPassword()
{
    const string correctPassword = "Pa$$w0rdBiosoft2025";
    const int maxAttempts = 3;
    int attempts = 0;
    
    Console.WriteLine("=================================================");
    Console.WriteLine("🔐 Biosoft Plus Face Scan API - Authentication");
    Console.WriteLine("=================================================");
    Console.WriteLine("กรุณาใส่ password เพื่อเข้าใช้งานระบบ:");
    
    while (attempts < maxAttempts)
    {
        Console.Write("Password: ");
        string inputPassword = ReadPasswordFromConsole();
        
        if (string.IsNullOrEmpty(inputPassword))
        {
            Console.WriteLine("❌ กรุณาใส่ password");
            continue;
        }
        
        if (inputPassword == correctPassword)
        {
            Console.WriteLine("✅ เข้าสู่ระบบสำเร็จ!");
            Console.WriteLine("=================================================");
            return true;
        }
        
        attempts++;
        int remainingAttempts = maxAttempts - attempts;
        
        if (remainingAttempts > 0)
        {
            Console.WriteLine($"❌ Password ไม่ถูกต้อง! เหลือโอกาสอีก {remainingAttempts} ครั้ง");
        }
    }
    
    Console.WriteLine("❌ ใส่ password ผิดเกินกำหนด ระบบจะปิดตัวลง");
    Console.WriteLine("=================================================");
    return false;
}

// ฟังก์ชันอ่าน password โดยซ่อนตัวอักษร
static string ReadPasswordFromConsole()
{
    StringBuilder password = new StringBuilder();
    ConsoleKeyInfo keyInfo;
    
    do
    {
        keyInfo = Console.ReadKey(true);
        
        if (keyInfo.Key == ConsoleKey.Backspace)
        {
            if (password.Length > 0)
            {
                password.Length--;
                Console.Write("\b \b");
            }
        }
        else if (keyInfo.Key != ConsoleKey.Enter)
        {
            password.Append(keyInfo.KeyChar);
            Console.Write("*");
        }
    }
    while (keyInfo.Key != ConsoleKey.Enter);
    
    Console.WriteLine();
    return password.ToString();
}
